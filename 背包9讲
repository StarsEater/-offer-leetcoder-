#0-1背包 
/**
f[i][j] 表示只看前i个物品，总体积是j的情况下，总价值最大多少
f[i][j] = max(f[i-1][j],f[i-1][j-v[i]]+w[i])

f[0][0] = 0
二维到一维，逆序计算
f[j] = max(f[j],f[j-v[i]]+w[i]) 从大到小枚举保证上时刻的结果不会被覆盖，都是用的是<j的量
**/

# 完全背包
# 每件物品可以无限选择
/**
for i in range(0,n):
    # 正常
    for j in range(m,v[i]-1,-1):
        for k in range(0,j//v[i]+1):
            f[j] = max(f[j],f[j-k*v[i]]+k*w[i])
    # 优
    for j in range(v[i],m+1):
        f[j] = max(f[j],f[j-v[i]]+w[i])
        


**/

